server.port=8002
# 将来注册到eureka的服务名
spring.application.name=dataone-web
# eureka
eureka.client.service-url.defaultZone= http://localhost:9000/eureka/
# 后面改为true
eureka.client.register-with-eureka=true


spring.mvc.view.suffix=.html
#datasource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#是否自动回收超时连接,true就是自动回收
spring.datasource.druid.remove-abandoned=true
#连接超时的时间，单位为秒
spring.datasource.druid.remove-abandoned-timeout-millis=3600
# 初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
# 最大连接池数量
spring.datasource.druid.max-active=30
# 最小连接池数量
spring.datasource.druid.min-idle=5
# 获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=28000
# 连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=50
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计
spring.datasource.druid.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true





# spring.datasource.url=jdbc:mysql://47.103.108.82:3306/test?useUnicode=true&characterEncoding=UTF-8&useSSL=false
# 开发环境
# spring.datasource.url=jdbc:mysql://192.168.1.226:3306/dataone?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
# spring.datasource.username=root
# spring.datasource.password=888888
spring.datasource.url=jdbc:mysql://192.168.1.226:3306/dataone?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=888888

# 测试环境
#spring.datasource.url=jdbc:mysql://47.103.108.82:3306/dataone?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=Aa123456.
# 生产环境
# spring.datasource.url=
# spring.datasource.username=
# spring.datasource.password=


# JPA �������
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#logback
#logging.level.com.example=INFO
#logging.file=dataone.log
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.config=classpath:logback-test.xml
#spring.datasource.hikari.maximum = 2
# ����Ϊ���ӳصĲ������ã�Ӧ�õ�������������Դ��
# spring.datasource.initialSize=5
# spring.datasource.minIdle=5
# spring.datasource.maxActive=20
## ���û�ȡ���ӵȴ���ʱ��ʱ��
# spring.datasource.maxWait=60000
## ���ü����òŽ���һ�μ�⣬�����Ҫ�رյĿ������ӣ���λ�Ǻ���
# spring.datasource.timeBetweenEvictionRunsMillis=60000
## ����һ�������ڳ�����С�����ʱ�䣬��λ�Ǻ���
# spring.datasource.minEvictableIdleTimeMillis=300000
# spring.datasource.validationQuery=SELECT 1 FROM DUAL
# spring.datasource.testWhileIdle=true
# spring.datasource.testOnBorrow=false
# spring.datasource.testOnReturn=false

# json����
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
# jedis����
# host=127.0.0.1
# port=6379
# maxTotal=50
# maxIdle=10

# aop
spring.aop.auto=true

# ElasticSearch����
# �����ַ
# spring.data.elasticsearch.cluster-nodes=localhost:9300
# �������ӳ�ʱʱ��
# spring.data.elasticsearch.properties.transport.tcp.connect_timeout = 120s

# �շ�����
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jackson.property-naming-strategy= CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
#发送人的邮箱
spring.mail.host=smtp.163.com
spring.mail.username=sfhzyxzh@163.com
spring.mail.password=xue199709019072
spring.mail.default-encoding=UTF-8

#server.ssl.key-store=classpath:keystore.p12
#server.ssl.key-store-password=019072
#server.ssl.keyStoreType=PKCS12
#server.ssl.keyAlias=hpgary

#redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.1.153
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=10000


#kafka消费者
#spring.kafka.consumer.group-id=test-consumer-group
#spring.kafka.bootstrap-servers=192.168.1.153:9092,192.168.1.178:9092,192.168.1.184:9092


# system
#system.web-servers = localhost
system.kafka-servers = 192.168.1.156,192.168.1.166,192.168.1.184


#导入数据库sql文件配置
database.url=192.168.1.25
database.user=root
database.password=admin
database.databaseName=dataone
database.path=C:\\Users\\admin\\Desktop\\dataone1.sql

#feign开启hystrix支持
#feign.hystrix.enabled=true
#
## （熔断延迟） 设置hystrix的超时时间为6000ms ，默认为1000ms，根据需求可以把延迟调大点
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
#


#请求处理的超时时间
ribbon.ReadTimeout= 120000
#请求连接的超时时间
ribbon.ConnectTimeout= 30000
##ribbon的超时时间, 防止feign调用超时
#ribbon.ReadTimeout= 15000
#ribbon.ConnectTimeout= 15000
##同一台实例最大重试次数,不包括首次调用
#ribbon.MaxAutoRetries= 1
##重试负载均衡其他的实例最大重试次数,不包括首次调用
#ribbon.MaxAutoRetriesNextServer= 1
#ribbon.OkToRetryOnAllOperations=false

